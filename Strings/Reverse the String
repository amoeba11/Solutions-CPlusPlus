/*

Given an input string, reverse the string word by word.

Example:

Given s = "the sky is blue",

return "blue is sky the".

        A sequence of non-space characters constitutes a word.
        Your reversed string should not contain leading or trailing spaces, even if it is present in the input string.
        If there are multiple spaces between words, reduce them to a single space in the reversed string.

*/

void Solution::reverseWords(string &A) {
    int n=A.size();
    if(n==1) return;
    int k=0;
    int i=n-1;
    int s=0;
    int e=n-1;
    string ans;
    while(i>=0)
    {
        if(A[i]==' ')
        {
            s=i+1;
            while(s<=e)
            {
                ans+=A[s];
                s++;
            }
            ans+=A[i];
            e=i-1;
        }
        i--;
    }
    s=0;
    while(s<=e)
    {
        ans+=A[s];
        s++;
    }
    for(int i=0; i<n; i++) A[i]=ans[i];
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
}
