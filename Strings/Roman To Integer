/*

Given a roman numeral, convert it to an integer.

Input is guaranteed to be within the range from 1 to 3999.

Read more details about roman numerals at Roman Numeric System

Example :

Input : "XIV"
Return : 14

Input : "XX"
Output : 20

*/

int Solution::romanToInt(string A) {
    int n=A.length();
    int res=0;
    for(int i=0; i<n; i++)
    {
        if(A[i]=='M') res+=1000;
        else if(A[i]=='D') res+=500;
        else if(A[i]=='L') res+=50;
        else if(A[i]=='V') res+=5;
        else if(A[i]=='C')
        {
            int flag=0;
            if(i+1<n)
            {
                if(A[i+1]=='D') {res+=400; flag=1;}
                else if (A[i+1]=='M') {res+=900; flag=1;}
            }
            if(flag) i++;
            if(!flag) res+=100;
        }
        else if(A[i]=='X')
            {
                int flag=0;
                if(i+1<n)
                {
                    if(A[i+1]=='L') {res+=40; flag=1;}
                    else if (A[i+1]=='C') {res+=90; flag=1;}
                }
                if(flag) i++;
                if(!flag) res+=10;
            }
            else if(A[i]=='I')
            {
                int flag=0;
                if(i+1<n)
                {
                    if(A[i+1]=='V') {res+=4; flag=1;}
                    else if (A[i+1]=='X') {res+=9; flag=1;}
                }
                if(flag) i++;
                if(!flag) res+=1;
            }
        }
    return res;
}
