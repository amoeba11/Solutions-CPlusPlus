/*

Print concentric rectangular pattern in a 2d matrix.
Let us show you some examples to clarify what we mean.

Example 1:

Input: A = 4.
Output:

4 4 4 4 4 4 4 
4 3 3 3 3 3 4 
4 3 2 2 2 3 4 
4 3 2 1 2 3 4 
4 3 2 2 2 3 4 
4 3 3 3 3 3 4 
4 4 4 4 4 4 4 

Example 2:

Input: A = 3.
Output:

3 3 3 3 3 
3 2 2 2 3 
3 2 1 2 3 
3 2 2 2 3 
3 3 3 3 3 

The outermost rectangle is formed by A, then the next outermost is formed by A-1 and so on.

You will be given A as an argument to the function you need to implement, and you need to return a 2D array.

*/

vector<vector<int> > Solution::prettyPrint(int A) {
    int a=0;
    int b=0;
    int m=2*A-1;
    int n=2*A-1;
    int val=A;
    vector<vector<int>> V(m,vector<int> (n));
    while(a<m && b<n)
    {
        for(int i=b; i<n; i++)
        {
            V[a][i]=(val);
        }
        a++;
        for(int i=a; i<m; i++)
        {
            V[i][n-1]=(val);
        }
        n--;
        if(a<m)
        {
            for(int i=n-1; i>=b; i--)
            {
                V[m-1][i]=(val);
            }
            m--;
        }
        if(b<n)
        {
            for(int i=m-1; i>=a; i--)
            {
                V[i][b]=(val);
            }
            b++;
        }
        val--;
    }
return V;
}
