/*

Write a program to validate if the input string has redundant braces?
Return 0/1

0 -> NO
1 -> YES

Input will be always a valid expression

and operators allowed are only + , * , - , /

Example:

((a + b)) has redundant braces so answer will be 1
(a + (a + b)) doesn't have have any redundant braces so answer will be 0

*/

int Solution::braces(string A) {
    int n=A.length();
    int c=0;
    stack <char> s;
    for(int i=0; i<n; i++)
    {
        if(A[i]=='(' || A[i]=='+' || A[i]=='-' || A[i]=='*' || A[i]=='/')
        {
            s.push(A[i]);
        }
        else if(A[i]==')')
        {
            c=1;
            if(s.top()=='(')
            {
                return 1;
            }
            else 
            {
                while(s.top()!='(')
                {
                    s.pop();
                }
                s.pop();
            }
        }
    }
    if(c && n==3) return 1;
    return 0;
}
