/*

Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target.
Return the sum of the three integers.

Assume that there will only be one solution

Example:
given array S = {-1 2 1 -4},
and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2)

*/

int Solution::threeSumClosest(vector<int> &A, int B) {
    sort(A.begin(),A.end());
    int n=A.size();
    long long int sum=1000000000;
    int ans;
    for(int l=0; l<n-2; l++)
    {
        int m=l+1;
        int h=n-1;
        while(m<h)
        {
            int csum=(A[l]+A[h]+A[m]);
            if(abs(csum-B)<sum)
            {
                sum=abs(csum-B);
                ans=csum;
            }
            if(csum==B) return ans;
            else if(csum>B) h--;
            else m++;
        }
    }
    return ans;
}
