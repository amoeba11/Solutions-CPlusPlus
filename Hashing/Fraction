/*

Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.

If the fractional part is repeating, enclose the repeating part in parentheses.

Example :

Given numerator = 1, denominator = 2, return "0.5"
Given numerator = 2, denominator = 1, return "2"
Given numerator = 2, denominator = 3, return "0.(6)"

*/

string Solution::fractionToDecimal(int A, int B) {
    if(!A) return "0";
    if(B==1) return to_string(A);
    long long int num = A;
    long long int dec = B;
    if(B==-1) return to_string(-1*num);
    string s;
    if((A<0 && B>0)||(A>0 && B<0)) s.append("-");
    long long int ans = num/dec;
    s.append(to_string(ans));
    if(num%dec==0) return s;
    s.append(".");
    long long int rem = num%dec;
    map <int, int> hash;
    string t;
    int repeat=0;
    while(rem!=0)
    {
        if(hash.find(rem)!=hash.end())
        {
            s.insert(hash[rem],"(");
            s+=")";
            break;
        }
        hash[rem]=s.size();
        rem=rem*10;
        s.append(to_string(abs(rem/dec)));
        rem=rem%dec;
    }
    return s;
    
}
